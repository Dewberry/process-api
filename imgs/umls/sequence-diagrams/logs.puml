@startuml logging
!theme mars

title Job Logs Retrieval Flow
header
    For simplicity, this diagram is created for an async job running on a cloud platform.
    Jobs with different configurations have "almost" identical sequences.
end header

participant User
participant Server
entity Job
participant "Execution\nPlatform"
participant Disk
participant Storage


User -> Server: Submit async job
activate Server

Server -> Job: Create new job with Job ID
activate Job
Job -> "Execution\nPlatform": Register Job
activate "Execution\nPlatform"

Job --> Server: Return acknowledgment
Server --> User: Respond with Created status
deactivate Server

note over Job, Disk: Logging takes place throughout the Job's lifecycle
Job -> Disk: Log messages (Server Logs)

User -> Server: Request logs for active job
activate Server
Server -> Job: Update container logs
Job -> "Execution\nPlatform": Fetch Container logs
Job -> Disk: Write Container logs
Server -> Disk: Fetch combined logs (Container + Server)
Disk --> Server: Return combined logs
Server --> User: Respond with logs
deactivate Server

"Execution\nPlatform" -> Job: Notify Job Finished
deactivate "Execution\nPlatform"

note over Job: Job close routine starts

Job -> "Execution\nPlatform": Fetch Container logs
Job -> Disk: Write Container logs
note over Job, "Execution\nPlatform": Job is removed from Active Jobs store but it continue to wait for other routines\nsuch as Metadata to finish, as other routines can still log messages

Disk -> Storage: Move logs to Storage

deactivate Job

User -> Server: Request logs for completed job
activate Server
Server -> Storage: Fetch stored logs
Storage --> Server: Return combined logs
Server --> User: Respond with logs
deactivate Server

@enduml
