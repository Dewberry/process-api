@startuml results
!theme mars

title Job Results Retrieval Flow
header
    For simplicity, this diagram is created for an async job running on a cloud platform.
    Jobs with different configurations have "almost" identical sequences.
end header

participant User
participant Server
entity Job
participant "Execution\nPlatform"
participant Storage

User -> Server: Submit async job
activate Server

Server -> Job: Create new job with Job ID
activate Job
Job -> "Execution\nPlatform": Register Job
activate "Execution\nPlatform"

Job --> Server: Return acknowledgment
Server --> User: Respond with Created status
deactivate Server

User -> Server: Request results for a job
activate Server
Server -> Job: Check if job is active
Job --> Server: Job is active
Server --> User: Respond 404 `results not ready`
deactivate Server


"Execution\nPlatform" -> Job: Notify Job Finished
deactivate "Execution\nPlatform"
note over Job: At this point, the job might be successful,\nbut results are not  ready.

Job -> "Execution\nPlatform": Fetch Container logs
Job -> Storage: Write Container logs
note over Job, "Execution\nPlatform": Job is removed from Active Jobs store, results available

Job -> Storage: Write logs

deactivate Job

User -> Server: Request results after job is finished
activate Server
Server -> Job: Check job is active
Job --> Server: Job is inactive
Server -> Storage: Fetch Container logs
Storage --> Server: Return Container logs
Server -> Server: Parse last log
Server --> User: Respond with results
deactivate Server

@enduml
